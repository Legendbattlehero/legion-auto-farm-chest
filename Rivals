local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "LegionWare",
    LoadingTitle = "WesamX99",
    LoadingSubtitle = "by WesamX",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "LegionX"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false
})

local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image

-- Variables
local silentAimActive = false
local espActive = false
local aimbotActive = false
local autoFarmActive = false
local espList = {} -- Keep track of ESP drawings
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Function to get the nearest target's head
local function getNearestHead()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = player
            end
        end
    end

    if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("Head") then
        return closestPlayer.Character.Head, closestPlayer
    end

    return nil, nil
end

-- Function to teleport above the nearest player
local function teleportAboveNearestPlayer()
    local closestHead, closestPlayer = getNearestHead()
    if closestHead then
        -- Calculate position above the nearest player
        local teleportPosition = closestHead.Position + Vector3.new(0, 5, 0)  -- Adjust the height value as needed
        -- Move the local player to the new position
        LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(teleportPosition))
    else
        print("No nearby player found.")
    end
end

-- Function to Auto Farm above player heads
local function autoFarm()
    -- Keep track of markers for cleanup
    local farmMarkers = {}

    RunService.RenderStepped:Connect(function()
        if autoFarmActive then
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character and player.Character:FindFirstChild("Head") and player ~= LocalPlayer then
                    local headPosition = player.Character.Head.Position + Vector3.new(0, 5, 0)  -- 5 studs above
                    local farmMarker = farmMarkers[player.Name]

                    if not farmMarker then
                        -- Create a new marker
                        farmMarker = Instance.new("Part")
                        farmMarker.Size = Vector3.new(1, 1, 1)
                        farmMarker.Shape = Enum.PartType.Ball
                        farmMarker.Color = Color3.fromRGB(0, 255, 0)  -- Green color
                        farmMarker.Anchored = true
                        farmMarker.CanCollide = false
                        farmMarker.Parent = Workspace

                        -- Store the marker
                        farmMarkers[player.Name] = farmMarker
                    end

                    -- Move marker above the player's head
                    farmMarker.Position = headPosition
                end
            end
        else
            -- Clean up farm markers if auto-farm is disabled
            for _, farmMarker in pairs(farmMarkers) do
                farmMarker:Destroy()
            end
            farmMarkers = {}  -- Clear the table
        end
    end)
end

-- Silent Aim Toggle
PlayerTab:CreateToggle({
    Name = "Silent Aim",
    CurrentValue = false,
    Flag = "SilentAim", -- Identifier for configuration
    Callback = function(Value)
        silentAimActive = Value
        print("Silent Aim toggled:", Value)
    end
})

-- ESP Toggle
PlayerTab:CreateToggle({
    Name = "ESP",
    CurrentValue = false,
    Flag = "ESP", -- Identifier for configuration
    Callback = function(Value)
        espActive = Value
        if not espActive then
            -- Remove all ESP charms when ESP is toggled off
            for playerName, espData in pairs(espList) do
                espData[1]:Remove()
            end
            espList = {} -- Clear the ESP list
        end
        print("ESP toggled:", Value)
    end
})

-- Aimbot Functionality
local function lockOnToHeadSmoothly()
    local targetHead, targetPlayer = getNearestHead()
    if targetHead then
        -- Gradual movement for aimbot, instead of instant snap
        local aimPosition = targetHead.Position
        local currentCFrame = Camera.CFrame
        local direction = (aimPosition - currentCFrame.Position).unit  -- Get direction to target
        local newPosition = currentCFrame.Position + direction * 0.2  -- Smooth step toward target position

        Camera.CFrame = CFrame.new(newPosition, aimPosition)
    end
end

-- Detect Q key press to toggle Aimbot
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end  -- Ignore if the game processed the input already
    if input.KeyCode == Enum.KeyCode.Q then
        aimbotActive = not aimbotActive  -- Toggle aimbot state
        print("Aimbot toggled:", aimbotActive)
    end
end)

-- Aimbot logic to continually aim at the closest player's head if enabled
RunService.RenderStepped:Connect(function()
    if aimbotActive then
        lockOnToHeadSmoothly()
    end
end)

-- Create Auto Farm Toggle Button
PlayerTab:CreateToggle({
    Name = "Auto Farm",
    CurrentValue = false,
    Flag = "AutoFarm", -- Identifier for configuration
    Callback = function(Value)
        autoFarmActive = Value
        if autoFarmActive then
            print("Auto Farm activated.")
            autoFarm()  -- Start auto farming when toggled on
        else
            print("Auto Farm deactivated.")
        end
    end
})

-- Detect X key press to trigger teleport above nearest player
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end  -- Ignore if the game processed the input already
    if input.KeyCode == Enum.KeyCode.X then
        teleportAboveNearestPlayer()
        print("Teleported above the nearest player.")
    end
end)

print("Silent Aim, ESP, Aimbot functionality, Teleport Button, and Auto Farm loaded successfully.")
